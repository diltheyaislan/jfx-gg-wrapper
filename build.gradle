/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
   	id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'edu.sc.seis.launch4j' version '2.5.4'
}

group 'JavaGX Go-Global Wrapper'
version '1.0-SNAPSHOT'
mainClassName = "app.jfxgg.Main"
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

dependencies {
    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
    
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	implementation 'com.github.vatbub:mslinks:1.0.6.2'
	implementation 'org.openjfx:javafx-graphics:20-ea+11'
	implementation 'org.openjfx:javafx-controls:20-ea+11'
	implementation 'org.openjfx:javafx-fxml:20-ea+11'	
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "app.jfxgg.Main"
    }
    baseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    version = '11.0.+'
}

launch4j {
	headerType = "gui"
    outfile = "jfx-gg-wrapper.exe"
	mainClassName = "app.jfxgg.Main"
    icon = "${projectDir}/src/main/resources/images/icon.ico"
    jar = "${projectDir}/build/libs/jfx-gglobal-wrapper-all-1.0-SNAPSHOT.jar"
}